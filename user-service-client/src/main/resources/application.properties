
## 服务端口
server.port = 8080

##服务提供方
#provider.service.name = user-service-provider
### 提供方服务主机
#provider.service.host = localhost
### 提供方服务端口
#provider.service.port = 9090

# 开放 所有Web 管理 Endpoints
management.endpoints.web.exposure.include = *
# 激活 shutdown Endpoint
management.endpoint.shutdown.enabled=true


## 关闭 Eureka Client，显示地通过配置方式注册 Ribbon 服务地址
#eureka.client.enabled = false

## 定义 user-service-provider Ribbon 的服务器地址
## 为 RibbonLoadBalancerClient 提供服务列表
#user-service-provider.ribbon.listOfServers = \
#  http://${provider.service.host}:${provider.service.port}

## 扩展 IPing 实现
#user-service-provider.ribbon.NFLoadBalancerPingClassName = \
#  com.segumentfault.spring.cloud.lesson8.user.ribbon.client.ping.MyPing

## 配置 @FeignClient(name = "${user.service.name}") 中的占位符
## user.service.name 实际需要制定 UserService 接口的提供方
## 也就是 user-service-provider，可以使用 ${provider.service.name} 替代
#user.service.name = ${provider.service.name}

## Kafka 生产者配置

spring.kafka.BOOTSTRAP-SERVERS=localhost:9092
spring.kafka.consumer.group-id=gc-group
spring.kafka.consumer.clientId=user-service-client


# 生产者 值的序列化
spring.kafka.producer.valueSerializer =cn.globalcash.spring.cloud.client.serializer.ObjectSerializer

## Spring Cloud Stream Binding 配置
### destination 指定 Rabbit MQ Topic
### user-message-out 为输入管道名称
#spring.cloud.stream.bindings.user-message-out.destination = gc-users

#默认事件跟踪功能是失效，需要通过配置项激活
#spring.cloud.bus.trace.enabled=true

## ActiveMQ 配置
spring.activemq.brokerUrl = tcp://localhost:61616

## JMS 配置
spring.jms.template.defaultDestination = gc-users-activemq

## Spring Cloud Stream 默认 Binder
#spring.cloud.stream.defaultBinder=rabbit
spring.cloud.stream.defaultBinder=activemq
### 消息管道 activemq-out 配置
spring.cloud.stream.bindings.activemq-out.binder = activemq
spring.cloud.stream.bindings.activemq-out.destination = gc-users-activemq

#JMS健康检查关闭
management.health.jms.enabled = false

## Sleuth 配置
spring.sleuth.sampler.percentage = 1

# Zipkin 配置
## 配置 Zipkin 服务器
zipkin.server.host = localhost
zipkin.server.port = 9411
spring.zipkin.base-url = http://${zipkin.server.host}:${zipkin.server.port}

#数据的发送方法
spring.zipkin.sender.type = WEB
#以下是可选项
#RABBIT,
#KAFKA,
#WEB;

#设置调用的重试次数
ribbon.MaxAutoRetriesNextServer=0