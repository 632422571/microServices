## 用户 service客户端应用
spring.application.name = user-service-client

## 配置客户端应用关联的应用
## spring.cloud.config.name 是可选的
## 如果没有配置，采用 ${spring.application.name}
#spring.cloud.config.name = user-service
## 关联 profile
#spring.cloud.config.profile = default
## 关联 label
#spring.cloud.config.label = master
## 激活 Config 服务器发现
#spring.cloud.config.discovery.enabled = true
## 配置 Config 服务器的应用名称（Service ID）
#spring.cloud.config.discovery.serviceId = config-server

## 注意：当前应用需要提前获取应用信息，那么将 Eureka 的配置信息提前至 bootstrap.properties 文件
## 原因：bootstrap 上下文是 Spring Boot 上下文的 父 上下文，那么它最先加载，因此需要最优先加载 Eureka 注册信息
## Spring Cloud Eureka 客户端 注册到 Eureka 服务器
#eureka.client.serviceUrl.defaultZone = \
#  http://localhost:10000/eureka

#采用zookeeper作注册中心
#根据自身环境
spring.profiles.active=dev
#指定zookeeper的地址,多个用逗号拼接
spring.cloud.zookeeper.connect-string=localhost:2181
#指定springcloud 读取zookeeper路径的开始位置。选取你自己的目录
spring.cloud.zookeeper.config.root=/config
#开始zk的配置
spring.cloud.zookeeper.config.enabled=true
#是否监听配置
spring.cloud.zookeeper.config.watcher.enabled=true
#配置文件分隔符
spring.cloud.zookeeper.config.profile-separator=,

#获取配置的规则
#假设:
#spring.cloud.zookeeper.config.root=xxxx ;
#spring.application.name=abc
#zk 路径:
#/xxxx/abc/com/gabo/username
#取值:
#@value(${com.gabo.username})
#若加上环境，如下：
#/config/user-service-client,dev/