## 用户 Ribbon客户端应用
spring.application.name = user-service-provider

## 服务端口
server.port = 9090

# 开放 所有Web 管理 Endpoints
management.endpoints.web.exposure.include = *
# 激活 shutdown Endpoint
management.endpoint.shutdown.enabled=true

## 关闭 Eureka Client，显示地通过配置方式注册 Ribbon 服务地址
#eureka.client.enabled = false

## 连接 Eureka Sever
#eureka.client.serviceUrl.defaultZone = http://localhost:10000/eureka/

## Spring Cloud Stream Binding 配置
### destination 指定 Kafka Topic
### userMessage 为输入管道名称
#spring.cloud.stream.bindings.user-message.destination = gc-users

## Kafka 生产者配置

spring.kafka.BOOTSTRAP-SERVERS=localhost:9092
spring.kafka.consumer.group-id=gc-group
spring.kafka.consumer.clientId=user-service-provider

## ActiveMQ 配置
spring.activemq.brokerUrl = tcp://localhost:61616
### 信任所有的Packages
spring.activemq.packages.trustAll = true

## JMS 配置
spring.jms.template.defaultDestination = gc-users-activemq

## Spring Cloud Stream 默认 Binder
#spring.cloud.stream.defaultBinder=rabbit
spring.cloud.stream.defaultBinder=activemq
### 消息管道 activemq-out 配置
spring.cloud.stream.bindings.activemq-in.binder = activemq
spring.cloud.stream.bindings.activemq-in.destination = gc-users-activemq

#JMS健康检查关闭
management.health.jms.enabled = false

## Sleuth 配置
spring.sleuth.sampler.percentage = 1

# Zipkin 配置
# 配置 Zipkin 服务器
zipkin.server.host = localhost
zipkin.server.port = 9411
spring.zipkin.base-url = http://${zipkin.server.host}:${zipkin.server.port}
#数据的发送方法
spring.zipkin.sender.type = WEB
#以下是可选项
#RABBIT,
#KAFKA,
#WEB;

#druid数据源配置
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://localhost:3306/micro?useUnicode=true&characterEncoding=utf-8
spring.datasource.druid.username=root
spring.datasource.druid.password=root

#连接池参数，初始数、最大数、最小数、获取连接等待超时时间（毫秒）
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-wait=60000

#指定mapper*.xml加载位置,mapper-locations指的路径是src/main/resources
mybatis.mapper-locations=classpath:mapper/*.xml


#采用zookeeper作注册中心
#根据自身环境
spring.profiles.active=dev
#指定zookeeper的地址,多个用逗号拼接
spring.cloud.zookeeper.connect-string=localhost:2181
#指定springcloud 读取zookeeper路径的开始位置。选取你自己的目录
spring.cloud.zookeeper.config.root=/config
#开始zk的配置
spring.cloud.zookeeper.config.enabled=true
#是否监听配置
spring.cloud.zookeeper.config.watcher.enabled=true
#配置文件分隔符
spring.cloud.zookeeper.config.profile-separator=,